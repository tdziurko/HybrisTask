<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 
	<context:component-scan base-package="hybris.blog" />
 	<mvc:annotation-driven/>
 	
 	<import resource="security-context.xml"/>
 	
 	<mvc:resources mapping="/resources/**" location="/resources/assets/" />
 	
 	<!-- .jsp, yes, I know, but, pls, don't blame me, it was more reliable in build than 
 	creating api and tie it with angular.js -->
 	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

    <!-- Tiles configuration -->
    <bean id="tilesConfigurer"
        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles/tiles-definitions.xml</value>
            </list>
        </property>
    </bean>
    
    <!-- DATABASE -->
    
    <bean id="dataSource"
			class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/blog_development"/>
		<property name="username" value="root"/>
		<property name="password" value=""/>
	</bean>
    
    <bean id="jpaVendorAdapter"
			class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
		<property name="showSql" value="true"/>
		<property name="generateDdl" value="false"/>
		<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
	</bean>
    
    <bean id="LocalContainerEntityManagerFactoryBean" class=
			"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="hybris.blog.models" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</bean>
   
   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="LocalContainerEntityManagerFactoryBean" />
   </bean>
   <tx:annotation-driven transaction-manager="transactionManager" />
    
</beans>